package edu.tum.cs.cadmos.examples.^deployment.aramis.tp51.^deployment

import edu.tum.cs.cadmos.examples.^deployment.aramis.tp51.^software.*
import edu.tum.cs.cadmos.examples.^deployment.aramis.tp51.platform.*

costmodel Chassis_on_AurixTC277T_VPMA {
	
	ChassisFunction1 {
		TriCore16P {
			
			WCET = 1 ACET = 500	BCET = 400	SRAM = 50000
		}
		TriCore16PLockStep {
			WCET = 1	ACET = 700	BCET = 600	SRAM = 50000
		}
		TriCore16ELockStep {
			WCET = 1	ACET = 2400	BCET = 2300	SRAM = 35000
		}
		
//		GenericCore {
//			WCET = 23 * Core.executionPenalty
//		}
		
		
	}
	
	ChassisFunction1.output {
		SRICrossBar {
			//unit: CPU cycles
			//LMU RAM -> Core
			TRANSMISSION_LATENCY = 0	TRANSMISSION_DURATION = 1
		}
		
		//Core-> other RAM: shorter!
	}
	
	//penalty RAM access: local < other core < LMU
	//penalty for many RAM accesses
	//(distance * frequency)
	//? penalty concurrent access
	// only RAM - not ROM

	ChassisFunction2 {
		TriCore16P {
			WCET = 1	ACET = 500	BCET = 400	SRAM = 10000
		}
		TriCore16PLockStep {
			WCET = 1	ACET = 900	BCET = 600	SRAM = 10000
		}
		TriCore16ELockStep {
			WCET = 1	ACET = 1400	BCET = 1300	SRAM = 8000
		}
	}

	ChassisFunction2.output {
		SRICrossBar {
			TRANSMISSION_LATENCY = 0	TRANSMISSION_DURATION = 1
		}
	}
	
	ChassisFunction3 {
		TriCore16P {
			WCET = 1	ACET = 480	BCET = 460	SRAM = 20000
		}
		TriCore16PLockStep {
			WCET = 1	ACET = 490	BCET = 460	SRAM = 20000
		}
		TriCore16ELockStep {
			WCET = 1	ACET = 540	BCET = 530	SRAM = 18000
		}
	}
	
	ChassisFunction3.output {
		SRICrossBar {
			TRANSMISSION_LATENCY = 0	TRANSMISSION_DURATION = 1
		}
	}
	
	FlexRayReader {
		TriCore16PLockStep {
			WCET = 1	ACET = 170	BCET = 160	SRAM = 5000
		}
		TriCore16ELockStep {
			WCET = 1	ACET = 240	BCET = 230	SRAM = 5000
		}
	}
	
	FlexRayReader.output1 {
		SRICrossBar {
			TRANSMISSION_LATENCY = 0	TRANSMISSION_DURATION = 1
		}
	}

	FlexRayReader.output2 {
		SRICrossBar {
			TRANSMISSION_LATENCY = 0	TRANSMISSION_DURATION = 1
		}
	}

	FlexRayReader.output3 {
		SRICrossBar {
			TRANSMISSION_LATENCY = 0	TRANSMISSION_DURATION = 1
		}
	}
	
	FlexRayWriter {
		TriCore16PLockStep {
			WCET = 1	ACET = 170	BCET = 160	SRAM = 5000
		}
		TriCore16ELockStep {
			WCET = 1	ACET = 240	BCET = 230	SRAM = 5000
		}
	}
	
}