package parallel.hardware

component DistributedMulticoreNetwork(CPUs=20, Cores=2) {
	in net_in
	out net_out

	embed SharedMemoryMulticore(Cores=Cores) cpus[CPUs]
	embed Bus(Members=CPUs) fieldbus
	
	channel cpus[i].network_out -> fieldbus.member_in[i]
	channel fieldbus.member_out[i] -> cpus[i].network_in

	embed Gateway gateway

	channel gateway.local_out -> fieldbus.gateway_in
	channel fieldbus.gateway_out -> gateway.local_in
	channel net_in -> gateway.network_in
	channel gateway.network_out -> net_out
}

component SharedMemoryMulticore(Cores=80) {
	in network_in
	out network_out
	
	embed Core core[Cores]
	embed Bus(Members=Cores) bus
	
	channel core[i].bus_out -> bus.member_in[i]
	channel bus.member_out[i] -> core[i].bus_in
	
	embed Gateway networkCtrl
	
	channel networkCtrl.local_out -> bus.gateway_in
	channel bus.gateway_out -> networkCtrl.local_in
	channel network_in -> networkCtrl.network_in
	channel networkCtrl.network_out -> network_out
}

component Core {
	in bus_in
	out bus_out
}

component Bus(Members=1) {
	in member_in[Members]
	out member_out[Members]
	
	in gateway_in
	out gateway_out
}

component Gateway {
	in network_in
	out network_out

	in local_in
	out local_out
}