package edu.tum.cs.cadmos.examples.deployment.aramis.tp51.platform

/*
 * A 3-core processor (actually 5-cores are on-chip) with crossbar interconnect,
 * with the following parallel 32-bit cores.
 * <ul>
 * <li> TriCore 1.6P performance core without lockstep capability
 * <li> TriCore 1.6P performance core with lockstep capability
 * <li> TriCore 1.6E core with lockstep capability
 * </ul>
 * See also the processor block diagram:
 * <p>
 * <img height=300 src="http://www.infineon.com/export/sites/default/media/products/Microcontrollers/32bit/BlockDiagram-TC27xT.png">
 */
processing component InfineonAurixTC27xT {
	embed SRICrossBar ipc
	embed TriCore16P perfCore
	embed TriCore16PLockStep perfSafetyCore
	embed TriCore16ELockStep safetyCore

	channel ipc.core1Out -> perfCore.busIn
	channel perfCore.busOut -> ipc.core1In

	channel ipc.core2Out -> perfSafetyCore.busIn
	channel perfSafetyCore.busOut -> ipc.core2In

	channel ipc.core3Out -> safetyCore.busIn
	channel safetyCore.busOut -> ipc.core3In
	
	property SRAM = '472000'
}

/*
 * TriCore 1.6P performance core without lockstep capability.
 * <br>
 * Used for computation-intensive tasks with lower safety levels.
 */
processing component TriCore16P {
	in busIn
	out busOut
	
	property SIL_MIN = '1'
	property SIL_MAX = '2'
}

/*
 * TriCore 1.6P performance core with lockstep capability.
 * <br>
 * Used for computation-intensive tasks with low to high safety levels.
 */
processing component TriCore16PLockStep {
	in busIn
	out busOut
	
	property SIL_MIN = '1'
	property SIL_MAX = '3'
}

/*
 * TriCore 1.6E core with lockstep capability.
 * <br>
 * Used for tasks with high safety levels.
 */
processing component TriCore16ELockStep {
	in busIn
	out busOut
	
	property SIL_MIN = '2'
	property SIL_MAX = '4'
}

bus component SRICrossBar {
	in core1In	
	in core2In	
	in core3In	
	out core1Out	
	out core2Out	
	out core3Out
	
	property BusType = 'CrossBarBus'
}