package automotive.platforms

component ECUNetwork(ECUs=4) {

	embed ecu[ECUs] : ECU(2,0,1) 
	
	embed bus : Bus(ECUs)
	
	channel ecu[i].bus_out -> bus.input[i]
	channel bus.output[i] -> ecu[i].bus_in
	 	
}

component ECU(AnalogIn=2, AnalogOut=1, CPUs=1) {
	in adc[AnalogIn]
	in bus_in
	out pwm[AnalogOut]
	out bus_out
	
	embed busController : BusController(CPUs)
	channel bus_in -> busController.bus_in 
	channel busController.bus_out -> bus_out
	
	embed ioController : IOController(AnalogIn, AnalogOut, CPUs)
	channel adc[i] -> ioController.adc[i]
	channel ioController.pwm[i] -> pwm[i]
	
	embed cpu[CPUs] : CPU(AnalogIn, AnalogOut)
	channel busController.local_out -> cpu[i].remote_bus_in
	channel cpu[i].remote_bus_out -> busController.local_ins[i]
	channel ioController.local_adc[i] -> cpu.adc[i]
	channel cpu.pwm[i] -> ioController.local_pwm[i]
}

component BusController(CPUs=1) {
	in local_ins[CPUs]
	in bus_in
	out local_out
	out bus_out
}

component Bus(ECUs=4) {
	in input[ECUs]
	out output[ECUs]
}

component CPU(AnalogIn=4, AnalogOut=2) {
	in remote_bus_in
	in adc[AnalogIn]
	out remote_bus_out
	out pwm[AnalogOut]
}

component IOController(AnalogIn=4, AnalogOut=2, CPUs=1) {
	in adc[AnalogIn]
	in local_pwm[AnalogOut]
	out pwm[AnalogOut]
	out local_adc[AnalogIn]
}