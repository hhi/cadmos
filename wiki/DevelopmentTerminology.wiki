#summary Terminology and concepts applied during source development.
#labels Phase-Design,Phase-Implementation

=== Component ===
A component defines function that maps _messages_ received on _incoming channels_ to messages sent on _outgoing channels_.
The function of a component is also called the _behavior_ of the component.
The behavior of a component is either defined directly by a _non-deterministic transition machine_ or it is defined by the composed behavior of several _children_ components.
This hierarchical parent-children relation describes the _structure_ of a system.

See also:*
[DevelopmentTerminology#Channel Channel]
[DevelopmentTerminology#Message Message]
[DevelopmentTerminology#Structure Structure]
[DevelopmentTerminology#Behavior Behavior]
[DevelopmentTerminology#Machine Machine]
*

=== Channel ===
A channel represents a stream of _messages_ transmitted from a source component to a destination component.
We say, a channel is _outgoing_ from its source component and _incoming_ to its destination component.
A channel is _outbound_ to the _system boundary_ if its destination component is undefined.
A channel is _inbound_ from the _system boundary_ if its source component is undefined.
If a channel is neither outbound nor inbound, it can only _connect_ two components that belong to the same parent component.
Furthermore, a channel can _buffer_ messages by a certain _delay_, so a message sent by the source component at step _i_ will be received by the destination component at step _i + delay_.
A channel with a given buffer length of _d_ also requires _d_ initial messages.

See also:*
[DevelopmentTerminology#Message Message]
[DevelopmentTerminology#System_Boundary System Boundary]
[DevelopmentTerminology#Buffer Buffer]
[DevelopmentTerminology#Synchronous_System Synchronous System]
*

=== Message ===