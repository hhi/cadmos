#summary Terminology and concepts behind Cadmos, explained for users and developers.
#labels Phase-Design,Phase-Implementation

= Terminology and Concepts =

This page defines central terms of Cadmos and explains the main concepts. The target audience are users as well as developers. 

http://www4.in.tum.de/~schwitze/cadmos/cadmos-sketch.png

== Component ==
A component defines function that maps _messages_ received on _incoming channels_ to messages sent on _outgoing channels_.
The function of a component is also called the _behavior_ of the component.
The behavior of a component is either defined directly by a _non-deterministic transition machine_ or it is defined by the composed behavior of several _children_ components.
This hierarchical parent-children relation describes the _structure_ of a system.

See also:*
[Terminology#Channel Channel],
[Terminology#Message Message],
[Terminology#Structure Structure],
[Terminology#Behavior Behavior],
[Terminology#Machine Machine]
*

== Channel ==
A channel represents a _stream_ of _typed messages_ transmitted from a source component to a destination component.
We say, a channel is _outgoing_ from its source component and _incoming_ to its destination component.
A channel is _outbound_ to the _system boundary_ if its destination component is undefined.
A channel is _inbound_ from the _system boundary_ if its source component is undefined.
If a channel is neither outbound nor inbound, it can only _connect_ two components that belong to the same parent component.
Furthermore, a channel can _buffer_ messages by a certain _delay_, so a message sent by the source component at step _i_ will be received by the destination component at step _i + delay_.
A channel with a given buffer length of _d_ also requires _d_ initial messages.

See also:*
[Terminology#Component Component],
[Terminology#Message Message],
[Terminology#Type Type],
[Terminology#Stream Stream],
[Terminology#System_Boundary System Boundary],
[Terminology#Buffer Buffer],
[Terminology#Rate Rate]
*

== Message ==
A message has a data _type_ and is transmitted over a _channel_ with the same data _type_.
Any message is produced and sent by the _source component_ of a channel and received and consumed by the _destination component_ of a channel.
Messages can be _buffered_ in channels and can be produced and consumed at different _rates_.

See also:*
[Terminology#Component Component],
[Terminology#Channel Channel],
[Terminology#Type Type],
[Terminology#Stream Stream],
[Terminology#Buffer Buffer],
[Terminology#Rate Rate]
*

== Type ==

== Stream ==

== System Boundary ==

== Buffer ==

== Rate ==