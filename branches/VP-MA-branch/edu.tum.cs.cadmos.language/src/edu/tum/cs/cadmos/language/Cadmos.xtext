grammar edu.tum.cs.cadmos.language.Cadmos with org.eclipse.xtext.common.Terminals

generate cadmos "http://www.tum.edu/cs/cadmos/language/Cadmos"

Model:
	('package' name=QualifiedName)?
	imports+=Import*
	elements+=Element*;

Import:
	'import' importedNamespace=QualifiedNameWithWildcard;

Element:
	Component | Costmodel | Requirements | Deployment | Schedule;

Component:
	role=Role 'component' name=ID '{' features+=Feature* '}';

enum Role:
	software | processing | bus;

Feature:
	Port | Embedding | Channel | ComponentProperty | Assumption;

Port:
	(inbound?='in' | 'out') name=ID ('rate' rate=INT)?;

Embedding:
	'embed' component=[Component] name=ID;

Channel:
	'channel' src=PortRef '->' snk=PortRef ('delay' delay=INT)?;

PortRef:
	(embedding=[Embedding] '.')? port=[Port];

Assumption:
	'assumption' value=ID;

ComponentProperty:
	'property' name=ID '=' value=STRING;

Costmodel:
	'costmodel' name=ID '{' mappings+=Mapping* '}';

Mapping:
	component=[Component] ('.' port=[Port])? '{' targetCosts+=TargetCost* '}';

TargetCost:
	component=[Component] '{' costs+=Cost* '}';

Cost:
	key=ID '=' value=INT;

Requirements:
	'requirements' name=ID '{' requirements+=Requirement* '}';

Requirement:
	PeriodicityRequirement | LatencyRequirement | RobustnessRequirement;

RobustnessRequirement:
	'robustness' '[' fromComponent=[Component]'.'fromEmbedding=[Embedding] ']' 
				'[' toComponent=[Component]'.'toEmbedding=[Embedding] ']' '=' robustness=Interval;

PeriodicityRequirement:
	'period' component=[Component] '=' period=INT;

LatencyRequirement:
	'latency' fromComponent=[Component]'.'(fromEmbedding=[Embedding] '.')? fromPort=[Port] '=>' 
			toComponent=[Component]'.'(toEmbedding=[Embedding] '.')? toPort=[Port] '=' latency=Interval;

Interval:
	'['(fromValue=INT '..' toValue=INT)']';

Deployment:
	'deployment' name=ID '{'
	('swc' swc=[Component] &
	'plc' plc=[Component] &
	'cost' cost=[Costmodel] &
	'req' req=[Requirements])
	'}';

Schedule:
	'schedule' name=ID '{' periodicSchedules+=PeriodicSchedule* '}';

PeriodicSchedule:
	'periodic' period=INT '{' resourceSchedules+=ResourceSchedule* '}';

ResourceSchedule:
	'resource' resource=[Component] '{' tasks+=Task* '}';

Task:
	'task' component=[Component] start=INT;

QualifiedName:
	ID ('.' ID)*;

QualifiedNameWithWildcard:
	QualifiedName '.*'?;